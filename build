#!/bin/sh
# I build Snap4Arduino for several platforms.
# If I fail, you may need to run the prepare script first.
# Check out prepare --help for instructions

print_help() {
    echo "--platform=TARGET   Selects a platform. Accepts both generic platform names"
    echo "                    (all, mobile, desktop, desktop/gnu) and specific names"
    echo "                    (desktop/gnu/64)."
    echo
    echo "--run               Builds and runs Snap4Arduino for the specified architecture."
    echo "                    Only for desktop Gnu/Linux."
    echo
    echo "--rerun             Runs the last built version of Snap4Arduino, if it exists."
    echo "                    Only for desktop Gnu/Linux."
    echo
    echo "--deploy=URL        Tries to deploy the build version(s) to a server."
    echo
    echo "                    --username=USRNAME  Specifies a username for the deploy"
    echo "                                        server."
    echo "                    --dir=PATH          Specifies a path for deploying built"
    echo "                                        files in the deploy server."
    echo "                                        If unspecified, the default /var/www"
    echo "                                        directory will be used."
    echo
}

if test $# -eq 0; then
    print_help
fi

# parse parameters

while echo $1 | grep ^- > /dev/null; do eval $( echo $1 | sed 's/-//g' | sed 's/=.*//g' | tr -d '\012')=$( echo $1 | sed 's/.*=//g' | tr -d '\012'); shift; done

if test -n "$help"; then
    print_help
fi

# build function

build() {

    if test "$platform" = "all"; then
        platform=""
    fi

    allplatforms=`find src/platforms -follow -name '*.buildme*' | sed -r 's|/[^/]+$||' | cut -c 15-`
    platforms=`echo "$allplatforms" | grep $platform`

    echo "Will build for the following platforms:\n\n$platforms"

    for each in $platforms; do
        echo
        echo "======="
        echo "Building for $each..."
        echo "======="
        echo
        rm -rf tmp
        echo "Fetching Snap! sources..."
        cp -r src/snap tmp
        echo "Fetching Snap4Arduino core..."
        cp -r src/s4a tmp
        echo "Fetching platform-specific sources..."
        cp -r src/platforms/$each/root/* tmp
        echo "Fetching assets..."
        cp assets/* tmp
        echo "Fetching version file..."
        cp src/version tmp
        echo "Running platform-specifig build script..."
        src/platforms/$each/build $each
        echo "Done!"
        rm -rf tmp
    done
}

if test -n "$platform"; then
    build
fi
